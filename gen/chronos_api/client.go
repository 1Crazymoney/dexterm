// Code generated by goa v3.1.1, DO NOT EDIT.
//
// ChronosAPI client
//
// Command:
// $ goa gen github.com/InjectiveLabs/injective-core/api/design -o ../

package chronosapi

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "ChronosAPI" service client.
type Client struct {
	SymbolInfoEndpoint goa.Endpoint
	HistoryEndpoint    goa.Endpoint
}

// NewClient initializes a "ChronosAPI" service client given the endpoints.
func NewClient(symbolInfo, history goa.Endpoint) *Client {
	return &Client{
		SymbolInfoEndpoint: symbolInfo,
		HistoryEndpoint:    history,
	}
}

// SymbolInfo calls the "symbolInfo" endpoint of the "ChronosAPI" service.
func (c *Client) SymbolInfo(ctx context.Context, p *SymbolInfoPayload) (res *TradingViewSymbolInfoResponse, err error) {
	var ires interface{}
	ires, err = c.SymbolInfoEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*TradingViewSymbolInfoResponse), nil
}

// History calls the "history" endpoint of the "ChronosAPI" service.
func (c *Client) History(ctx context.Context, p *HistoryPayload) (res *HistoryResponse, err error) {
	var ires interface{}
	ires, err = c.HistoryEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*HistoryResponse), nil
}
