// Code generated by goa v3.1.1, DO NOT EDIT.
//
// DerivativesAPI endpoints
//
// Command:
// $ goa gen github.com/InjectiveLabs/injective-core/api/design -o ../

package derivativesapi

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "DerivativesAPI" service endpoints.
type Endpoints struct {
	Orders    goa.Endpoint
	PostOrder goa.Endpoint
}

// NewEndpoints wraps the methods of the "DerivativesAPI" service with
// endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Orders:    NewOrdersEndpoint(s),
		PostOrder: NewPostOrderEndpoint(s),
	}
}

// Use applies the given middleware to all the "DerivativesAPI" service
// endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Orders = m(e.Orders)
	e.PostOrder = m(e.PostOrder)
}

// NewOrdersEndpoint returns an endpoint function that calls the method
// "orders" of service "DerivativesAPI".
func NewOrdersEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*OrdersPayload)
		return s.Orders(ctx, p)
	}
}

// NewPostOrderEndpoint returns an endpoint function that calls the method
// "postOrder" of service "DerivativesAPI".
func NewPostOrderEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*PostOrderPayload)
		return s.PostOrder(ctx, p)
	}
}
