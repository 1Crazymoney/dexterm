// Code generated by goa v3.1.1, DO NOT EDIT.
//
// CoordinatorAPI endpoints
//
// Command:
// $ goa gen github.com/InjectiveLabs/injective-core/api/design -o ../

package coordinatorapi

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "CoordinatorAPI" service endpoints.
type Endpoints struct {
	Configuration      goa.Endpoint
	RequestTransaction goa.Endpoint
	SoftCancels        goa.Endpoint
}

// NewEndpoints wraps the methods of the "CoordinatorAPI" service with
// endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Configuration:      NewConfigurationEndpoint(s),
		RequestTransaction: NewRequestTransactionEndpoint(s),
		SoftCancels:        NewSoftCancelsEndpoint(s),
	}
}

// Use applies the given middleware to all the "CoordinatorAPI" service
// endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Configuration = m(e.Configuration)
	e.RequestTransaction = m(e.RequestTransaction)
	e.SoftCancels = m(e.SoftCancels)
}

// NewConfigurationEndpoint returns an endpoint function that calls the method
// "configuration" of service "CoordinatorAPI".
func NewConfigurationEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*ConfigurationPayload)
		return s.Configuration(ctx, p)
	}
}

// NewRequestTransactionEndpoint returns an endpoint function that calls the
// method "request_transaction" of service "CoordinatorAPI".
func NewRequestTransactionEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*RequestTransactionPayload)
		return s.RequestTransaction(ctx, p)
	}
}

// NewSoftCancelsEndpoint returns an endpoint function that calls the method
// "soft_cancels" of service "CoordinatorAPI".
func NewSoftCancelsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*SoftCancelsPayload)
		return s.SoftCancels(ctx, p)
	}
}
